{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tim/Documents/School/COMP2406/Participation/nameen/nameen-client/src/components/GameRoom.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"../logo.svg\";\nimport './GameRoom.css';\nimport React, { useState, useEffect } from 'react';\nimport { Button, LinearProgress } from '@material-ui/core';\n\nfunction GameRoom(props) {\n  _s();\n\n  const [displayPhrase, setDisplayPhrase] = useState('[original client value]');\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [numClients, setNumClients] = useState(0);\n  const {\n    gameID\n  } = props.match.params; // Gets roomId from URL\n\n  const socket = props.socket;\n  useEffect(() => {\n    //socket = io(BACKEND);\n    //console.log('Connecting to '+BACKEND);\n    socket.on(\"NEXT_WORD\", data => {\n      setDisplayPhrase(data);\n    });\n    socket.on(\"TICK\", data => {\n      console.log('Setting client time' + data);\n      setTimeRemaining(data);\n    });\n    socket.on(\"CLIENT_CONNECTED\", data => {\n      console.log('Clients connected: ' + data);\n      setNumClients(data);\n    });\n  }, [socket]);\n\n  function handleNextClick() {\n    console.log('NEXT button was clicked');\n    socket.emit('GOT_WORD', {\n      gameID\n    });\n  }\n\n  function handlePassClick() {\n    console.log('PASS button was clicked');\n    socket.emit('PASS_WORD', {\n      gameID\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"GameID: \", gameID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\\"\", displayPhrase, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        size: \"large\",\n        color: \"primary\",\n        onClick: handlePassClick,\n        children: \"PASS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        onClick: handleNextClick,\n        children: \"GOT IT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          color: \"primary\",\n          value: timeRemaining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), numClients > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Clients connected: \", numClients]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No clients connected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameRoom, \"RPM7hv4rK0S9JbtZjV/n6lCqZds=\");\n\n_c = GameRoom;\nexport default GameRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"sources":["/home/tim/Documents/School/COMP2406/Participation/nameen/nameen-client/src/components/GameRoom.js"],"names":["React","useState","useEffect","Button","LinearProgress","GameRoom","props","displayPhrase","setDisplayPhrase","timeRemaining","setTimeRemaining","numClients","setNumClients","gameID","match","params","socket","on","data","console","log","handleNextClick","emit","handlePassClick","logo","marginTop"],"mappings":"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","sourcesContent":["import logo from '../logo.svg';\nimport './GameRoom.css';\nimport React, { useState, useEffect } from 'react';\nimport { Button, LinearProgress } from '@material-ui/core'\n\nfunction GameRoom(props) {\n\n  const [displayPhrase, setDisplayPhrase] = useState('[original client value]');\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [numClients, setNumClients] = useState(0);\n\n  const { gameID } = props.match.params; // Gets roomId from URL\n  const socket = props.socket;\n\n  useEffect(() => {\n\n    //socket = io(BACKEND);\n    //console.log('Connecting to '+BACKEND);\n\n    socket.on(\"NEXT_WORD\", (data) => {\n      setDisplayPhrase(data);\n    });\n\n    socket.on(\"TICK\", data => {\n      console.log('Setting client time' + data)\n      setTimeRemaining(data);\n    });\n\n    socket.on(\"CLIENT_CONNECTED\", (data) => {\n      console.log('Clients connected: ' + data);\n      setNumClients(data);\n    });\n\n  }, [socket]);\n\n  function handleNextClick() {\n    console.log('NEXT button was clicked');\n    socket.emit('GOT_WORD', {gameID});\n  }\n\n  function handlePassClick() {\n    console.log('PASS button was clicked');\n    socket.emit('PASS_WORD', {gameID});\n  }\n\n\n  return (\n    <>\n      <h3>GameID: {gameID}</h3>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        \"{displayPhrase}\"\n      </p>\n      <span>\n        <Button variant=\"outlined\" size=\"large\" color=\"primary\" onClick={handlePassClick}>\n          PASS\n        </Button>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleNextClick}>\n          GOT IT\n        </Button>\n        <div style={{ marginTop: '20px' }}>\n          <LinearProgress variant=\"determinate\" color=\"primary\" value={timeRemaining} />\n        </div>\n      </span>\n      { numClients > 0 ?\n        <p>\n          Clients connected: {numClients}\n        </p>\n        :\n        <p>\n           No clients connected.\n        </p>\n      }\n    </>\n  );\n}\n\nexport default GameRoom;\n"]},"metadata":{},"sourceType":"module"}